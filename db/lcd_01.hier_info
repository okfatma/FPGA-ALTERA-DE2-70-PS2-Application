|main
clk => ps2_keyboard_to_ascii:keyboard_birimi.clk
clk => lcd_01:lcd_birimi.clk
reset => lcd_01:lcd_birimi.reset
pb => lcd_01:lcd_birimi.pb
lcd_on <= lcd_01:lcd_birimi.lcd_on
en <= lcd_01:lcd_birimi.en
rs <= lcd_01:lcd_birimi.rs
rw <= lcd_01:lcd_birimi.rw
blon <= lcd_01:lcd_birimi.blon
db[0] <> lcd_01:lcd_birimi.db[0]
db[1] <> lcd_01:lcd_birimi.db[1]
db[2] <> lcd_01:lcd_birimi.db[2]
db[3] <> lcd_01:lcd_birimi.db[3]
db[4] <> lcd_01:lcd_birimi.db[4]
db[5] <> lcd_01:lcd_birimi.db[5]
db[6] <> lcd_01:lcd_birimi.db[6]
db[7] <> lcd_01:lcd_birimi.db[7]
ps2_clk => ps2_keyboard_to_ascii:keyboard_birimi.ps2_clk
ps2_data => ps2_keyboard_to_ascii:keyboard_birimi.ps2_data
LEDG[0] <= lcd_01:lcd_birimi.LEDG[0]
LEDG[1] <= lcd_01:lcd_birimi.LEDG[1]
LEDG[2] <= lcd_01:lcd_birimi.LEDG[2]
LEDG[3] <= lcd_01:lcd_birimi.LEDG[3]
LEDG[4] <= lcd_01:lcd_birimi.LEDG[4]
LEDG[5] <= lcd_01:lcd_birimi.LEDG[5]
LEDG[6] <= lcd_01:lcd_birimi.LEDG[6]
LEDG[7] <= lcd_01:lcd_birimi.LEDG[7]


|main|ps2_keyboard_to_ascii:keyboard_birimi
clk => ps2_keyboard:ps2_keyboard_0.clk
clk => ascii_code[0]~reg0.CLK
clk => ascii_code[1]~reg0.CLK
clk => ascii_code[2]~reg0.CLK
clk => ascii_code[3]~reg0.CLK
clk => ascii_code[4]~reg0.CLK
clk => ascii_code[5]~reg0.CLK
clk => ascii_code[6]~reg0.CLK
clk => shift_r.CLK
clk => shift_l.CLK
clk => control_l.CLK
clk => control_r.CLK
clk => caps_lock.CLK
clk => ascii[0].CLK
clk => ascii[1].CLK
clk => ascii[2].CLK
clk => ascii[3].CLK
clk => ascii[4].CLK
clk => ascii[5].CLK
clk => ascii[6].CLK
clk => ascii[7].CLK
clk => e0_code.CLK
clk => break.CLK
clk => ascii_new~reg0.CLK
clk => prev_ps2_code_new.CLK
clk => state~1.DATAIN
ps2_clk => ps2_keyboard:ps2_keyboard_0.ps2_clk
ps2_data => ps2_keyboard:ps2_keyboard_0.ps2_data
ascii_new <= ascii_new~reg0.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[0] <= ascii_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[1] <= ascii_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[2] <= ascii_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[3] <= ascii_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[4] <= ascii_code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[5] <= ascii_code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[6] <= ascii_code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|ps2_keyboard_to_ascii:keyboard_birimi|ps2_keyboard:ps2_keyboard_0
clk => debounce:debounce_ps2_clk.clk
clk => ps2_code[0]~reg0.CLK
clk => ps2_code[1]~reg0.CLK
clk => ps2_code[2]~reg0.CLK
clk => ps2_code[3]~reg0.CLK
clk => ps2_code[4]~reg0.CLK
clk => ps2_code[5]~reg0.CLK
clk => ps2_code[6]~reg0.CLK
clk => ps2_code[7]~reg0.CLK
clk => ps2_code_new~reg0.CLK
clk => count_idle[0].CLK
clk => count_idle[1].CLK
clk => count_idle[2].CLK
clk => count_idle[3].CLK
clk => count_idle[4].CLK
clk => count_idle[5].CLK
clk => count_idle[6].CLK
clk => count_idle[7].CLK
clk => count_idle[8].CLK
clk => count_idle[9].CLK
clk => count_idle[10].CLK
clk => count_idle[11].CLK
clk => sync_ffs[0].CLK
clk => sync_ffs[1].CLK
clk => debounce:debounce_ps2_data.clk
ps2_clk => sync_ffs[0].DATAIN
ps2_data => sync_ffs[1].DATAIN
ps2_code_new <= ps2_code_new~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[0] <= ps2_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[1] <= ps2_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[2] <= ps2_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[3] <= ps2_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[4] <= ps2_code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[5] <= ps2_code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[6] <= ps2_code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ps2_code[7] <= ps2_code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|ps2_keyboard_to_ascii:keyboard_birimi|ps2_keyboard:ps2_keyboard_0|debounce:debounce_ps2_clk
clk => result~reg0.CLK
clk => counter_out[0].CLK
clk => counter_out[1].CLK
clk => counter_out[2].CLK
clk => counter_out[3].CLK
clk => counter_out[4].CLK
clk => counter_out[5].CLK
clk => counter_out[6].CLK
clk => counter_out[7].CLK
clk => counter_out[8].CLK
clk => flipflops[0].CLK
clk => flipflops[1].CLK
button => flipflops[0].DATAIN
result <= result~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|ps2_keyboard_to_ascii:keyboard_birimi|ps2_keyboard:ps2_keyboard_0|debounce:debounce_ps2_data
clk => result~reg0.CLK
clk => counter_out[0].CLK
clk => counter_out[1].CLK
clk => counter_out[2].CLK
clk => counter_out[3].CLK
clk => counter_out[4].CLK
clk => counter_out[5].CLK
clk => counter_out[6].CLK
clk => counter_out[7].CLK
clk => counter_out[8].CLK
clk => flipflops[0].CLK
clk => flipflops[1].CLK
button => flipflops[0].DATAIN
result <= result~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|lcd_01:lcd_birimi
clk => line1~13.CLK
clk => line1~0.CLK
clk => line1~1.CLK
clk => line1~2.CLK
clk => line1~3.CLK
clk => line1~4.CLK
clk => line1~5.CLK
clk => line1~6.CLK
clk => line1~7.CLK
clk => line1~8.CLK
clk => line1~9.CLK
clk => line1~10.CLK
clk => line1~11.CLK
clk => line1~12.CLK
clk => first_change.CLK
clk => LEDG[5]~reg0.CLK
clk => tick_old.CLK
clk => blon~reg0.CLK
clk => check_bf_f.CLK
clk => rw_reg.CLK
clk => rs~reg0.CLK
clk => en~reg0.CLK
clk => db_out[0].CLK
clk => db_out[1].CLK
clk => db_out[2].CLK
clk => db_out[3].CLK
clk => db_out[4].CLK
clk => db_out[5].CLK
clk => db_out[6].CLK
clk => db_out[7].CLK
clk => line1_count[0].CLK
clk => line1_count[1].CLK
clk => line1_count[2].CLK
clk => line1_count[3].CLK
clk => line1_count[4].CLK
clk => line1_count[5].CLK
clk => line1_count[6].CLK
clk => line1_count[7].CLK
clk => line1_count[8].CLK
clk => line1_count[9].CLK
clk => line1_count[10].CLK
clk => line1_count[11].CLK
clk => line1_count[12].CLK
clk => line1_count[13].CLK
clk => line1_count[14].CLK
clk => line1_count[15].CLK
clk => line1_count[16].CLK
clk => line1_count[17].CLK
clk => line1_count[18].CLK
clk => line1_count[19].CLK
clk => line1_count[20].CLK
clk => line1_count[21].CLK
clk => line1_count[22].CLK
clk => line1_count[23].CLK
clk => line1_count[24].CLK
clk => line1_count[25].CLK
clk => line1_count[26].CLK
clk => line1_count[27].CLK
clk => line1_count[28].CLK
clk => line1_count[29].CLK
clk => line1_count[30].CLK
clk => line1_count[31].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
clk => count[19].CLK
clk => count[20].CLK
clk => count[21].CLK
clk => count[22].CLK
clk => count[23].CLK
clk => count[24].CLK
clk => count[25].CLK
clk => count[26].CLK
clk => count[27].CLK
clk => count[28].CLK
clk => count[29].CLK
clk => count[30].CLK
clk => count[31].CLK
clk => rewrite_cmd[0].CLK
clk => rewrite_cmd[1].CLK
clk => rewrite_cmd[2].CLK
clk => init_cmd[0].CLK
clk => init_cmd[1].CLK
clk => init_cmd[2].CLK
clk => delay_count[0].CLK
clk => delay_count[1].CLK
clk => delay_count[2].CLK
clk => delay_count[3].CLK
clk => delay_count[4].CLK
clk => delay_count[5].CLK
clk => delay_count[6].CLK
clk => delay_count[7].CLK
clk => delay_count[8].CLK
clk => delay_count[9].CLK
clk => delay_count[10].CLK
clk => delay_count[11].CLK
clk => delay_count[12].CLK
clk => delay_count[13].CLK
clk => delay_count[14].CLK
clk => delay_count[15].CLK
clk => delay_count[16].CLK
clk => delay_count[17].CLK
clk => delay_count[18].CLK
clk => delay_count[19].CLK
clk => next_state~8.DATAIN
clk => state~8.DATAIN
clk => line1.CLK0
reset => line1.OUTPUTSELECT
reset => rw_reg.ACLR
reset => rs~reg0.ACLR
reset => en~reg0.ACLR
reset => db_out[0].ACLR
reset => db_out[1].ACLR
reset => db_out[2].ACLR
reset => db_out[3].ACLR
reset => db_out[4].ACLR
reset => db_out[5].ACLR
reset => db_out[6].ACLR
reset => db_out[7].ACLR
reset => line1_count[0].ACLR
reset => line1_count[1].ACLR
reset => line1_count[2].ACLR
reset => line1_count[3].ACLR
reset => line1_count[4].ACLR
reset => line1_count[5].ACLR
reset => line1_count[6].ACLR
reset => line1_count[7].ACLR
reset => line1_count[8].ACLR
reset => line1_count[9].ACLR
reset => line1_count[10].ACLR
reset => line1_count[11].ACLR
reset => line1_count[12].ACLR
reset => line1_count[13].ACLR
reset => line1_count[14].ACLR
reset => line1_count[15].ACLR
reset => line1_count[16].ACLR
reset => line1_count[17].ACLR
reset => line1_count[18].ACLR
reset => line1_count[19].ACLR
reset => line1_count[20].ACLR
reset => line1_count[21].ACLR
reset => line1_count[22].ACLR
reset => line1_count[23].ACLR
reset => line1_count[24].ACLR
reset => line1_count[25].ACLR
reset => line1_count[26].ACLR
reset => line1_count[27].ACLR
reset => line1_count[28].ACLR
reset => line1_count[29].ACLR
reset => line1_count[30].ACLR
reset => line1_count[31].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR
reset => count[4].ACLR
reset => count[5].ACLR
reset => count[6].ACLR
reset => count[7].ACLR
reset => count[8].ACLR
reset => count[9].ACLR
reset => count[10].ACLR
reset => count[11].ACLR
reset => count[12].ACLR
reset => count[13].ACLR
reset => count[14].ACLR
reset => count[15].ACLR
reset => count[16].ACLR
reset => count[17].ACLR
reset => count[18].ACLR
reset => count[19].ACLR
reset => count[20].ACLR
reset => count[21].ACLR
reset => count[22].ACLR
reset => count[23].ACLR
reset => count[24].ACLR
reset => count[25].ACLR
reset => count[26].ACLR
reset => count[27].ACLR
reset => count[28].ACLR
reset => count[29].ACLR
reset => count[30].ACLR
reset => count[31].ACLR
reset => rewrite_cmd[0].ACLR
reset => rewrite_cmd[1].ACLR
reset => rewrite_cmd[2].ACLR
reset => init_cmd[0].ACLR
reset => init_cmd[1].ACLR
reset => init_cmd[2].ACLR
reset => delay_count[0].ACLR
reset => delay_count[1].ACLR
reset => delay_count[2].ACLR
reset => delay_count[3].ACLR
reset => delay_count[4].ACLR
reset => delay_count[5].ACLR
reset => delay_count[6].ACLR
reset => delay_count[7].ACLR
reset => delay_count[8].ACLR
reset => delay_count[9].ACLR
reset => delay_count[10].ACLR
reset => delay_count[11].ACLR
reset => delay_count[12].ACLR
reset => delay_count[13].ACLR
reset => delay_count[14].ACLR
reset => delay_count[15].ACLR
reset => delay_count[16].ACLR
reset => delay_count[17].ACLR
reset => delay_count[18].ACLR
reset => delay_count[19].ACLR
reset => next_state~10.DATAIN
reset => state~10.DATAIN
reset => first_change.ENA
reset => check_bf_f.ENA
reset => blon~reg0.ENA
reset => tick_old.ENA
reset => LEDG[5]~reg0.ENA
tick => process_0.IN1
tick => process_0.IN1
tick => first_change.OUTPUTSELECT
tick => state.OUTPUTSELECT
tick => state.OUTPUTSELECT
tick => state.OUTPUTSELECT
tick => state.OUTPUTSELECT
tick => state.OUTPUTSELECT
tick => state.OUTPUTSELECT
tick => state.OUTPUTSELECT
tick => next_state.OUTPUTSELECT
tick => next_state.OUTPUTSELECT
tick => next_state.OUTPUTSELECT
tick => next_state.OUTPUTSELECT
tick => next_state.OUTPUTSELECT
tick => next_state.OUTPUTSELECT
tick => next_state.OUTPUTSELECT
tick => rewrite_cmd.OUTPUTSELECT
tick => rewrite_cmd.OUTPUTSELECT
tick => rewrite_cmd.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1_count.OUTPUTSELECT
tick => line1.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => delay_count.OUTPUTSELECT
tick => Selector45.IN4
data[0] => line1~12.DATAIN
data[0] => line1.DATAIN
data[1] => line1~11.DATAIN
data[1] => line1.DATAIN1
data[2] => line1~10.DATAIN
data[2] => line1.DATAIN2
data[3] => line1~9.DATAIN
data[3] => line1.DATAIN3
data[4] => line1~8.DATAIN
data[4] => line1.DATAIN4
data[5] => line1~7.DATAIN
data[5] => line1.DATAIN5
data[6] => line1~6.DATAIN
data[6] => line1.DATAIN6
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
pb => next_state.OUTPUTSELECT
lcd_on <= <VCC>
blon <= blon~reg0.DB_MAX_OUTPUT_PORT_TYPE
en <= en~reg0.DB_MAX_OUTPUT_PORT_TYPE
rs <= rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
rw <= rw_reg.DB_MAX_OUTPUT_PORT_TYPE
db[0] <> db[0]
db[1] <> db[1]
db[2] <> db[2]
db[3] <> db[3]
db[4] <> db[4]
db[5] <> db[5]
db[6] <> db[6]
db[7] <> db[7]
LEDG[0] <= <GND>
LEDG[1] <= <GND>
LEDG[2] <= <GND>
LEDG[3] <= <GND>
LEDG[4] <= <GND>
LEDG[5] <= LEDG[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[6] <= <GND>
LEDG[7] <= <GND>


